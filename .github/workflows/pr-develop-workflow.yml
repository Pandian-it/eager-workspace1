name: PR Workflow

on:
  pull_request:
    branches:
      - develop

jobs:
  pr-build-changeset:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout the PR branch with full history
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      # 2. Fetch the target branch (develop) to compare
      - name: Fetch develop branch
        run: git fetch origin develop

      # 3. Setup Node.js
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # 4. Install dependencies
      - name: Install dependencies
        run: npm install

      # 5. Detect affected projects
      - name: Get affected projects
        id: affected
        run: |
          BASE=$(git merge-base origin/develop HEAD)
          echo "BASE=$BASE" >> $GITHUB_ENV
          AFFECTED_PROJECTS=$(npx nx show projects --affected --base=$BASE --head=HEAD --plain)
          echo "NX_AFFECTED=$AFFECTED_PROJECTS" >> $GITHUB_ENV

      # 6. Add automated changeset for all affected projects
      - name: Add automated changeset
        run: |
          if [ -z "$NX_AFFECTED" ]; then
            echo "No affected projects; skipping changeset."
            exit 0
          fi

          mkdir -p .changeset
          echo "$NX_AFFECTED" | tr ' ' '\n' > affected.txt

          node <<'JS'
          const fs = require('fs');
          const path = require('path');
          const affected = fs.readFileSync('affected.txt', 'utf-8').split('\n').filter(Boolean);

          if (affected.length === 0) process.exit(0);

          const summary = "Auto-generated patch for affected projects";
          const filename = path.join('.changeset', `${Date.now()}-auto.md`);
          const content = [
            '---',
            affected.map(p => `"${p}": patch`).join('\n'),
            '---',
            '',
            summary
          ].join('\n');

          fs.writeFileSync(filename, content);
          console.log(`Created changeset: ${filename}`);
          JS

      # 7. Commit and push the changeset back to the PR branch
      - name: Commit and push changeset
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .changeset/*.md
          git commit -m "chore: auto-generated patch changeset for affected projects" || echo "No changes to commit"
          git push origin HEAD

      # 8. Build only affected projects
      - name: Build affected projects
        run: npx nx affected --target=build --base=$BASE --head=HEAD
