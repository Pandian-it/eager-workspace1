name: Create Release Branch

on:
  workflow_dispatch:
    inputs:
      release_branch:
        description: 'Name of the new release branch'
        required: true

jobs:
  create-release-branch:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      # 1. Checkout develop
      - name: Checkout develop
        uses: actions/checkout@v4
        with:
          ref: develop
          fetch-depth: 0

      # 2. Create release branch from develop
      - name: Create release branch
        run: |
          git checkout -b ${{ github.event.inputs.release_branch }}
          git push origin ${{ github.event.inputs.release_branch }}

      # 3. Checkout release branch explicitly
      - name: Checkout release branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.release_branch }}
          fetch-depth: 0

      # 4. Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm

      # 5. Install dependencies
      - name: Install dependencies
        run: npm install

      # 6. Override changeset baseBranch to release branch
      - name: Override changeset baseBranch
        run: |
          jq '.baseBranch = env.RELEASE_BRANCH' .changeset/config.json > tmp.json
          mv tmp.json .changeset/config.json
        env:
          RELEASE_BRANCH: ${{ github.event.inputs.release_branch }}

      # 7. Detect affected projects vs main
      - name: Get affected projects
        id: affected
        run: |
          AFFECTED=$(npx nx show projects --affected --base=origin/main --head=HEAD --plain || true)
          echo "affected=$AFFECTED" >> $GITHUB_OUTPUT

      # 8. Add a changeset for affected projects (always patch bump)
      - name: Add changeset
        if: steps.affected.outputs.affected != ''
        run: |
          mkdir -p .changeset
          for project in ${{ steps.affected.outputs.affected }}; do
            echo "---\"$project\": patch---" | npx changeset add --empty
          done
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .changeset
          git commit -m "ci: add changeset for affected projects" || echo "No changeset added"

      # 9. Run changesets/action to bump versions & open PR
      - name: Version packages and open PR
        if: steps.affected.outputs.affected != ''
        uses: changesets/action@v1
        with:
          version: true
          publish: false
          commit: "chore: version packages"
          title: "Version Packages"
          body: "This PR bumps package versions and updates changelogs based on the changesets"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}